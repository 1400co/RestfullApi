// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMedia.Infrastructure.Data;

namespace SocialMedia.Infrastructure.Migrations
{
    [DbContext(typeof(SocialMediaContext))]
    [Migration("20230130205436_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialMedia.Core.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdComentario")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnName("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comentario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 628, DateTimeKind.Local).AddTicks(4255),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            IsActive = true,
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 628, DateTimeKind.Local).AddTicks(9582),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            IsActive = true,
                            PostId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdPublicacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Descripcion")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .HasColumnName("Imagen")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnName("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Publicacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 631, DateTimeKind.Local).AddTicks(6436),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 631, DateTimeKind.Local).AddTicks(6761),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 631, DateTimeKind.Local).AddTicks(6771),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 1, 30, 15, 54, 36, 631, DateTimeKind.Local).AddTicks(6775),
                            Description = "Beatae doloremque error maxime dicta placeat numquam voluptatem sed laborum. ",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdSeguridad")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("Contrasena")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnName("Rol")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnName("Usuario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("NombreUsuario")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Seguridad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "10000.mmlVX3xzYuLQromOzqELBQ==.JIwrJbVGsgYiTMjqWqcvulmXk8Fv6c7hxbl8mEqixTI=",
                            Role = "Administrator",
                            User = "Oscar",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("BornDate")
                        .HasColumnName("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasColumnName("Apellidos")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnName("Nombres")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("Telefono")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BornDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oruedar@yopmail.com",
                            IsActive = true,
                            LastNames = "Rueda",
                            Names = "Oscar"
                        });
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.Comment", b =>
                {
                    b.HasOne("SocialMedia.Core.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_Comentario_Publicacion")
                        .IsRequired();

                    b.HasOne("SocialMedia.Core.Entities.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Comentario_Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("SocialMedia.Core.Entities.Post", b =>
                {
                    b.HasOne("SocialMedia.Core.Entities.User", "User")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Publicacion_Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
